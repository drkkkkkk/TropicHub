-- NICE TRY OF STEALING THE SOURCE :D
-- NICE TRY OF STEALING THE SOURCE :D
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v31==0) then v32=0;v33=nil;v31=1;end if (v31~=(1 + 0)) then else v34=nil;v35=nil;v31=2;end if (v31~=3) then else v38=nil;v39=nil;v31=4 -0 ;end if (v31==(7 -3)) then while true do if (v32~=(0 + 0)) then else local v103=987 -(579 + 408) ;while true do if (v103==(0 + 0)) then local v109=0;while true do if (v109~=(0 -0)) then else v33=0;v34=nil;v109=1;end if (v109==(4 -3)) then v103=1;break;end end end if (v103==(1 + 0)) then v32=1 -0 ;break;end end end if (v32==2) then v37=nil;v38=nil;v32=3;end if (v32~=(915 -(319 + 593))) then else v39=nil;while true do local v105=0;local v106;local v107;while true do if (v105==(1 + 0)) then while true do if (v106==0) then v107=0;while true do if (v107==(3 -2)) then if (v33==2) then local v158=0;local v159;local v160;while true do if (v158==1) then while true do if (v159~=0) then else v160=0;while true do if (v160~=0) then else local v317=0;while true do if (v317==(0 + 0)) then local v350=0;while true do if (v350~=1) then else v317=1 -0 ;break;end if (v350==(415 -(144 + 271))) then for v379=1 + 0 ,v24() do local v380=0;local v381;while true do if (0~=v380) then else v381=v22();if (v21(v381,1,1 + 0 )==(517 -(65 + 452))) then local v400=0;local v401;local v402;local v403;local v404;local v405;while true do if (v400~=(1 + 0)) then else v403=nil;v404=nil;v400=2;end if (v400==0) then v401=0;v402=nil;v400=1;end if (v400==2) then v405=nil;while true do if (v401==(1594 -(180 + 1413))) then local v412=0;while true do if (v412==(2 -1)) then v401=97 -(41 + 54) ;break;end if (v412~=0) then else v404=nil;v405=nil;v412=1;end end end if (v401==(2 + 0)) then while true do if ((1528 -(1328 + 198))~=v402) then else local v413=0 + 0 ;local v414;while true do if (0==v413) then v414=0;while true do if (v414==(1123 -(591 + 532))) then if (v21(v404,1,815 -(65 + 749) )==(1 + 0)) then v405[3 -1 ]=v39[v405[2]];end if (v21(v404,2,3 -1 )~=1) then else v405[3]=v39[v405[159 -(28 + 128) ]];end v414=1;end if (v414==(1 + 0)) then v402=3;break;end end break;end end end if ((0 + 0)==v402) then local v415=0;local v416;while true do if (v415~=(0 + 0)) then else v416=0;while true do if (v416==(1 -0)) then v402=1 + 0 ;break;end if ((0 -0)~=v416) then else local v422=0 + 0 ;while true do if (v422==(1 -0)) then v416=1;break;end if (v422~=0) then else v403=v21(v381,2,3);v404=v21(v381,4,6);v422=1 + 0 ;end end end end break;end end end if (v402~=1) then else local v417=0 + 0 ;local v418;while true do if (0==v417) then v418=0 -0 ;while true do if (v418~=(1 + 0)) then else v402=2;break;end if (v418==0) then v405={v23(),v23(),nil,nil};if (v403==(0 -0)) then local v427=0;local v428;local v429;local v430;while true do if (v427==(2 -1)) then v430=nil;while true do if (v428==(0 + 0)) then local v433=0 + 0 ;while true do if ((1 + 0)~=v433) then else v428=2 -1 ;break;end if (v433==0) then v429=0;v430=nil;v433=1;end end end if (v428==(1 + 0)) then while true do if (v429~=(1161 -(661 + 500))) then else v430=0;while true do if ((0 -0)~=v430) then else v405[3]=v23();v405[15 -11 ]=v23();break;end end break;end end break;end end break;end if (v427==(0 + 0)) then v428=0;v429=nil;v427=1 -0 ;end end elseif (v403==(834 -(455 + 378))) then v405[3]=v24();elseif (v403==2) then v405[3]=v24() -(2^(68 -52)) ;elseif (v403==3) then local v434=0;local v435;local v436;local v437;while true do if (v434~=0) then else v435=0;v436=nil;v434=1 + 0 ;end if (v434==(1 + 0)) then v437=nil;while true do if (v435~=1) then else while true do if (0~=v436) then else v437=1062 -(990 + 72) ;while true do if (v437~=(0 -0)) then else v405[3]=v24() -(2^(231 -(30 + 185))) ;v405[4]=v23();break;end end break;end end break;end if (v435==(0 -0)) then local v440=1518 -(1266 + 252) ;while true do if (v440==(564 -(16 + 548))) then v436=0 -0 ;v437=nil;v440=1 + 0 ;end if (v440==1) then v435=1;break;end end end end break;end end end v418=1;end end break;end end end if (3~=v402) then else if (v21(v404,3,3)==1) then v405[4]=v39[v405[12 -8 ]];end v34[v379]=v405;break;end end break;end if (v401==0) then v402=1791 -(955 + 836) ;v403=nil;v401=1;end end break;end end end break;end end end for v382=1,v24() do v35[v382-(1 -0) ]=v29();end v350=1 -0 ;end end end if (v317==(1 + 0)) then v160=1 + 0 ;break;end end end if (v160==(1 + 0)) then local v318=0 -0 ;local v319;while true do if (v318==(0 + 0)) then v319=0 + 0 ;while true do if (v319~=0) then else for v384=1 + 0 ,v24() do v36[v384]=v24();end return v37;end end break;end end end end break;end end break;end if (0==v158) then v159=0;v160=nil;v158=364 -(39 + 324) ;end end end break;end if (v107~=(0 -0)) then else local v112=0;while true do if (v112~=(0 -0)) then else if (v33==1) then local v250=0 + 0 ;while true do if (v250~=(623 -(528 + 94))) then else local v269=0;while true do if (v269~=0) then else for v337=120 -(35 + 84) ,v38 do local v338=0;local v339;local v340;local v341;local v342;while true do if (v338~=1) then else v341=nil;v342=nil;v338=2;end if (v338==0) then v339=0;v340=nil;v338=1 + 0 ;end if (v338==(2 + 0)) then while true do if (v339~=(0 + 0)) then else local v386=0;while true do if (v386~=(0 + 0)) then else v340=1395 -(488 + 907) ;v341=nil;v386=2 -1 ;end if (v386==(4 -3)) then v339=101 -(58 + 42) ;break;end end end if (v339==1) then v342=nil;while true do if (v340==(1395 -(231 + 1164))) then local v395=0 + 0 ;while true do if (v395==(1 + 0)) then v340=1;break;end if (v395~=0) then else local v408=1988 -(242 + 1746) ;while true do if (v408~=1) then else v395=1;break;end if (v408==(0 -0)) then v341=v22();v342=nil;v408=3 -2 ;end end end end end if (v340==1) then if (v341==1) then v342=v22()~=0 ;elseif (v341==(1435 -(633 + 800))) then v342=v25();elseif (v341==3) then v342=v26();end v39[v337]=v342;break;end end break;end end break;end end end v37[3]=v22();v269=1962 -(210 + 1751) ;end if (1==v269) then v250=1269 -(17 + 1250) ;break;end end end if (v250==(1 + 1)) then v33=2;break;end if (v250==(1173 -(289 + 884))) then local v270=570 -(401 + 169) ;while true do if ((0 + 0)==v270) then v38=v24();v39={};v270=2 -1 ;end if (v270==1) then v250=1 + 0 ;break;end end end end end if (v33==(0 -0)) then local v251=0;while true do if (v251==(622 -(324 + 297))) then local v271=0 + 0 ;while true do if (v271==(1 -0)) then v251=2;break;end if (v271~=(0 -0)) then else v36={};v37={v34,v35,nil,v36};v271=1;end end end if (0~=v251) then else local v272=0 -0 ;local v273;while true do if (v272==(0 + 0)) then v273=0;while true do if (0~=v273) then else local v351=0;while true do if ((0 + 0)==v351) then v34={};v35={};v351=1;end if (v351==(333 -(168 + 164))) then v273=1;break;end end end if (v273==1) then v251=1;break;end end break;end end end if (v251==2) then v33=1;break;end end end v112=1;end if (v112~=(2 -1)) then else v107=1;break;end end end end break;end end break;end if (v105~=(0 -0)) then else v106=0;v107=nil;v105=1159 -(1009 + 149) ;end end end break;end if (v32~=(496 -(436 + 59))) then else v35=nil;v36=nil;v32=2;end end break;end if (v31~=(4 -2)) then else v36=nil;v37=nil;v31=1549 -(601 + 945) ;end end end v30=nil;v18=7;end if (1==v18) then v21=nil;function v21(v40,v41,v42)if v42 then local v76=0;local v77;while true do if (v76==(0 -0)) then v77=(v40/((1892 -(1807 + 83))^(v41-(1 -0))))%((2 + 0)^(((v42-(3 -(7 -5))) -(v41-(1829 -(328 + 1500)))) + (3 -(605 -(102 + 501))))) ;return v77-(v77%(1 + 0)) ;end end else local v78=(1330 -(961 + 367))^(v41-1) ;return (((v40%(v78 + v78))>=v78) and (1 + 0)) or (0 -0) ;end end v22=nil;v18=2;end if (4==v18) then function v25()local v43=(154 + 573) -(351 + (1894 -(979 + 539))) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==0) then v44=v24();v45=v24();v43=1 + 0 ;end if (v43==(2 -1)) then v46=(1344 -(581 + 761)) -1 ;v47=(v21(v45,1 + 0 ,1375 -(1076 + 279) ) * ((1 + 1)^(49 -17))) + v44 ;v43=9 -7 ;end if (v43==(2 + 0)) then v48=v21(v45,1108 -((1719 -(256 + 877)) + 501) ,609 -(294 + 284) );v49=((v21(v45,993 -((1425 -728) + 264) )==(2 -1)) and  -((4 -2) -1)) or (579 -(498 + 80)) ;v43=9 -6 ;end if (v43==(3 + 0 + 0)) then if (v48==0) then if (v47==(0 -0)) then return v49 * (0 -(971 -(880 + 91))) ;else v48=(11 + 671) -((371 -194) + 504) ;v46=90 -(11 + 79) ;end elseif (v48==((7445 -4392) -(983 + (1167 -(136 + 1008))))) then return ((v47==(0 + 0)) and (v49 * ((1626 -(1238 + 387))/(0 + 0)))) or (v49 * NaN) ;end return v8(v49,v48-((3967 -2107) -(185 + 652)) ) * (v46 + (v47/((1 + 1)^(10 + 13 + 29)))) ;end end end v26=nil;function v26(v50)local v51=827 -(447 + 380) ;local v52;local v53;while true do if (v51==(1 -0)) then v52=v3(v16,v19,(v19 + v50) -((2 -1) + 0) );v19=v19 + v50 ;v51=1858 -(559 + 1297) ;end if (v51==(0 -0)) then v52=nil;if  not v50 then local v98=(0 + 0) -0 ;while true do if (v98==(1449 -(749 + 700))) then v50=v24();if (v50==(0 -0)) then return "";end break;end end end v51=1;end if (((1859 -(1425 + 430)) -1)==v51) then return v6(v53);end if (v51==(786 -(395 + 389))) then v53={};for v96=1 + 0 , #v52 do v53[v96]=v2(v1(v3(v52,v96,v96)));end v51=1706 -(1573 + 130) ;end end end v18=5;end if (v18==3) then v24=nil;function v24()local v54=151 -(19 + 132) ;local v55;local v56;local v57;local v58;while true do if (v54==0) then v55,v56,v57,v58=v1(v16,v19,v19 + (4 -1) );v19=v19 + 1 + (346 -(311 + 32)) ;v54=1 -0 ;end if (v54==(1914 -(54 + 1859))) then return (v58 * (16777793 -(454 + (288 -(140 + 25))))) + (v57 * (92627 -(19330 + 7761))) + (v56 * (440 -(108 + 7 + 69))) + v55 ;end end end v25=nil;v18=4;end if (5==v18) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v12("#",...) -1 ;local function v75()local v79=v62;local v80=v63;local v81=v64;local v82=v28;local v83={};local v84={};local v85={};for v92=0 + 0 ,v74 do if (((5858 -(1063 + 784))>(2118 + (2230 -415))) and (v92>=v81)) then v83[v92-v81 ]=v73[v92 + 1 + 0 + 0 ];else v85[v92]=v73[v92 + 1 + 0 ];end end local v86=(v74-v81) + (2 -1) ;local v87;local v88;while true do local v93=0 -0 ;while true do if (((147 -65)<((6918 -(593 + 375)) -(1364 + 154))) and (v93==(1892 -(113 + 1778)))) then if ((v88<=(20 + 2)) or (((20698 -(569 + 672)) -15537)<=(167 + 2409))) then if (((1424 -1024)<=(3100 -(187 + 1263))) and (v88<=(23 -13))) then if ((v88<=(3 + 1)) or ((457 + 730)<(1937 -(614 + 190)))) then if (((1248 + 1146)<(372 + 2573)) and (v88<=((2 -1) + 0))) then if ((4218==(8004 -3786)) and (v88>(1216 -(781 + 435)))) then if ((v85[v87[2 + 0 ]]~=v85[v87[11 -7 ]]) or ((2258 -1445)==(3349 -(1223 + 477)))) then v71=v71 + (1479 -(1025 + 453)) ;else v71=v87[3 + 0 ];end else local v113=0 -0 ;local v114;local v115;local v116;local v117;local v118;while true do if (((1 -0)==v113) or ((1046 + 1436)>=(422 + 3352))) then v116=nil;v117=nil;v113=3 -1 ;end if (((4395 -(578 + 1416))>=(3546 -(786 + 602))) and (v113==0)) then v114=0 + 0 ;v115=nil;v113=633 -(63 + 569) ;end if (((2453 -1822)<=(2354 -((265 -(37 + 172)) + 1118))) and (v113==(1793 -(706 + 1085)))) then v118=nil;while true do if (((3133 -962)==(560 + 1611)) and (v114==(133 -(17 + 114)))) then while true do if ((v115==(0 + 0)) or ((1263 -837)>=(10044 -5294))) then local v288=1800 -(1502 + 298) ;local v289;while true do if (((0 -0)==v288) or ((1765 + 285)>=(4509 -(579 + 1053)))) then v289=0 -0 ;while true do if (((1 + (27 -(20 + 7)))==v289) or ((358 -148)==(5950 -3528))) then v115=1788 -(1703 + 84) ;break;end if ((v289==(0 + 0)) or ((3334 -(109 + (2067 -1473)))>(10157 -5977))) then v116=v87[1 + 1 ];v117={v85[v116](v85[v116 + 1 + 0 ])};v289=1 + 0 ;end end break;end end end if (((3168 -(1365 + 139))>(44 + 85)) and (v115==(2 -1))) then v118=0;for v304=v116,v87[3 + 1 ] do local v305=0;local v306;while true do if (((3327 + 1241)>=(1296 + 257)) and ((0 + 0)==v305)) then v306=0 -0 ;while true do if (((4483 -1177)>(3618 -(1088 + 549))) and ((0 -0)==v306)) then v118=v118 + (474 -(189 + 284)) ;v85[v304]=v117[v118];break;end end break;end end end break;end end break;end if (((2384 -(342 + 311))<(7772 -3592)) and (v114==(1 + 0))) then local v259=1245 -(29 + 1216) ;while true do if ((v259==(0 -0)) or ((1526 + 3441)<=(2787 + 834))) then v117=nil;v118=nil;v259=1 + 0 ;end if (((2539 -(61 + 109))<(11400 -6939)) and (v259==(1 + 0))) then v114=3 -1 ;break;end end end if ((4776>(4907 -(833 + 895))) and (v114==(0 + 0))) then v115=0 + (900 -(263 + 637)) ;v116=nil;v114=481 -(143 + (762 -425)) ;end end break;end end end elseif (((4269 -(1254 + 15))==(2681 + 319)) and (v88<=2)) then if ((v85[v87[1858 -(219 + 1637) ]]<v85[v87[5 -1 ]]) or ((3379 -(68 + 447 + 31))<=(1779 -1082))) then v71=v71 + 1 ;else v71=v87[10 -7 ];end elseif ((v88>(288 -(114 + 171))) or ((3191 -(1364 + 29 + 255))>2723)) then local v163=0 -0 ;local v164;while true do if (((749 -(649 + 100))==v163) or ((761 -514)==(3281 -(512 + 241)))) then v164=v87[206 -(61 + 143) ];v85[v164]=v85[v164]();break;end end else local v165=771 -(484 + 287) ;local v166;local v167;local v168;local v169;while true do if ((v165==(4 -2)) or ((7363 -5294)<=(387 + 328))) then while true do if ((v166==(0 -0)) or ((3561 -(473 + 1194))==(3452 -1748))) then local v274=0 -0 ;while true do if ((v274==(0 -(0 -0))) or ((178 + 159 + 1899)>=(2532 + 2340))) then v167=v87[2 + 0 ];v168={v85[v167](v13(v85,v167 + (363 -(108 + 254)) ,v72))};v274=1 + 0 ;end if ((v274==1) or ((5339 -(165 + 293))<(5069 -(691 + 164)))) then v166=1 + 0 ;break;end end end if (((2161 -(235 + 1628))==((595 + 39) -336)) and (v166==1)) then v169=(59 + 663) -(362 + 360) ;for v290=v167,v87[6 -2 ] do local v291=0 + 0 ;local v292;while true do if ((v291==(0 + 0)) or ((1487 + 2666)<(151 + 1525))) then v292=678 -(84 + 594) ;while true do if (((4464 -(241 + 18))>(4812 -2549)) and (v292==(0 -0))) then v169=v169 + (1085 -(477 + (1855 -1248))) ;v85[v290]=v168[v169];break;end end break;end end end break;end end break;end if ((v165==(1 + 0)) or ((7707 -3554)>(4734 -(56 + 18)))) then v168=nil;v169=nil;v165=(194 -(44 + 143)) -5 ;end if ((0==v165) or ((2477 -(845 + 217))>=((2767 + 323) -(750 + (1704 -(1194 + 198)))))) then v166=0 -0 ;v167=nil;v165=1103 -((1484 -(863 + 185)) + 666) ;end end end elseif ((v88<=(1346 -(55 + 1284))) or ((1363 -692)>(2847 -(786 + 1096)))) then if (((3259 + 267)>=(748 + 1685)) and (v88<=(3 + (5 -3)))) then v85[v87[2]][v87[3]]=v85[v87[6 -2 ]];elseif ((954<((9334 -5219) -(1094 + 229))) and (v88>(3 + 3))) then local v170=v87[4 -2 ];local v171=v87[8 -4 ];local v172=v170 + ((612 + 33) -(425 + 218)) ;local v173={v85[v170](v85[v170 + (2 -1) ],v85[v172])};for v230=1 + 0 ,v171 do v85[v172 + v230 ]=v173[v230];end local v174=v173[1571 -(607 + 963) ];if ((((2764 -2027) + 1659)<(6454 -3349)) and v174) then local v236=1983 -(1390 + 593) ;local v237;local v238;while true do if ((v236==(0 + 0)) or ((6 + 2120)>=(5207 -(976 + 952)))) then v237=489 -(282 + 207) ;v238=nil;v236=4 -(8 -5) ;end if ((((2470 -(138 + 721)) -(11 + 5))==(300 + 1295)) and (v236==(1 + 0))) then while true do if (((3364 -(308 + 351))>601) and ((593 -(232 + 361))==v237)) then v238=178 -(111 + 67) ;while true do if (((0 + 0)==v238) or ((3536 + 917)>=((11445 -(11 + 64)) -(3297 + 3202)))) then v85[v172]=v174;v71=v87[2 + 1 ];break;end end break;end end break;end end else v71=v71 + (3 -2) ;end else v85[v87[1 + (1780 -(744 + 1035)) ]]();end elseif ((v88<=(867 -(48 + 811))) or ((19630 -15104)<=(2848 -(57 + 28)))) then local v121=0 + 0 ;local v122;local v123;local v124;while true do if (((4199 -(4048 -(572 + 591)))<((3038 -2113) + 1244)) and (v121==(2 -1))) then v124=v87[8 -(1 + 4) ];for v239=462 -(232 + 229) ,v124 do v123[v239]=v85[v122 + v239 ];end break;end if ((((26 + 3179) -(477 + 303))<=(5678 -(713 + 299))) and (v121==(0 + 0))) then local v234=1133 -(995 + 138) ;while true do if ((v234==((605 + 413) -(705 + 313))) or ((444 + 3136)<(3424 -(118 + 370)))) then v122=v87[(1 + 2) -1 ];v123=v85[v122];v234=341 -(233 + 107) ;end if (((1157 -479)<(4269 -(2023 -(605 + 9)))) and (1==v234)) then v121=(949 + 456) -(20 + (1835 -(233 + 218))) ;break;end end end end elseif ((v88==(34 -25)) or ((1338 + 939)>((4233 -(153 + 127)) -(1140 + 17)))) then local v175=0 -0 ;local v176;local v177;local v178;while true do if (((1963 + 2841)==(5601 -(118 + 679))) and (v175==(1 + 0))) then v178=nil;while true do if (((0 + 0)==v176) or ((3627 -(873 + 416))<(3135 -1982))) then local v275=303 -(233 + 70) ;while true do if (((910 -(213 + 638))<(162 + (3205 -1005))) and (v275==(1131 -(416 + 714)))) then v176=(2 -1) + 0 ;break;end if (((4039 -2294)==(309 + 1436)) and (v275==(0 + 0))) then local v322=1227 -(211 + 1016) ;while true do if ((v322==(0 + 0 + 0)) or ((969 -350)>=(1499 -618))) then v177=v87[1718 -(126 + 1590) ];v178=v85[v177];v322=1741 -(275 + (1700 -(170 + 65))) ;end if ((((4151 -2073) -453)<(6195 -3018)) and (v322==(1 + 0))) then v275=1537 -(872 + 664) ;break;end end end end end if ((v176==(476 -((2188 -(474 + 1331)) + 92))) or ((6662 -3251)<=(47 + 1952))) then for v293=v177 + (1361 -(1244 + 116)) ,v87[1 + 2 ] do v7(v178,v85[v293]);end break;end end break;end if ((v175==(446 -(332 + 114))) or ((647 + 1216)>(4117 + 497))) then local v254=0 + 0 ;while true do if (((0 -0)==v254) or ((594 + 461)==(5484 -(42 + 823 + 32)))) then v176=1815 -(1239 + 576) ;v177=nil;v254=4 -3 ;end if (((382 -(13 + 34))<((6420 -(1175 + 524)) -3687)) and (v254==(1067 -(203 + 863)))) then v175=1 -0 ;break;end end end end else v85[v87[1424 -(124 + 1298) ]]=v85[v87[1233 -(648 + 582) ]]/v87[9 -5 ] ;end elseif ((v88<=(10 + 6)) or (((1160 -(155 + 659)) + 2763)<=(2948 -1952))) then if (((6561 -4318)<(8992 -(4879 -(590 + 243)))) and (v88<=(557 -(27 + 517)))) then if ((2152==(66 + 2086)) and (v88<=(34 -23))) then local v125=649 -(96 + 553) ;local v126;local v127;local v128;local v129;local v130;local v131;while true do if (((6120 -(932 + (314 -54)))>=(8639 -4894)) and (v125==(1890 -(1879 + 9)))) then v130=nil;v131=nil;v125=9 -6 ;end if ((v125==(0 + (1232 -(486 + 746)))) or ((550 -285)>(3423 + 1428))) then v126=0 -0 ;v127=nil;v125=1756 -(1473 + 282) ;end if (((4372 -(522 + (50 -28)))>=(7 + 61)) and (v125==(593 -(226 + (714 -348))))) then v128=nil;v129=nil;v125=2;end if ((v125==(11 -8)) or ((2217 + 832)<(1092 -(429 + 383)))) then while true do if ((v126==((8 -5) -2)) or ((7222 -2863)<=(5425 -3760))) then local v262=1146 -(638 + 508) ;while true do if (((1454 + 240)<=((4016 + 1915) -(201 + (3725 -2211)))) and ((0 -0)==v262)) then v129=nil;v130=nil;v262=1 + 0 ;end if ((705<=(1633 + 1264)) and (v262==(1 + 0))) then v126=1 + 1 ;break;end end end if (((984 + 2763)<(8516 -3899)) and (v126==(0 + 0))) then v127=0 + 0 ;v128=nil;v126=1 + 0 ;end if (((444 + 123)<(138 + 473)) and (v126==(5 -(7 -4)))) then v131=nil;while true do if (((1901 -(778 + 114))>(448 + 229)) and (v127==(3 -1))) then for v307=v128,v72 do local v308=0 -0 ;local v309;while true do if (((5742 -3734)>=(118 + 536)) and (((143 -(10 + 133)) -0)==v308)) then v309=0 -(1994 -(1687 + 307)) ;while true do if (((219 + 1610)==((2560 -(129 + 1127)) + 525)) and (v309==(0 -0))) then v131=v131 + (341 -(96 + 244)) ;v85[v307]=v129[v131];break;end end break;end end end break;end if ((((14235 -(480 + 600)) -8896)>(5478 -3638)) and (v127==(0 -0))) then local v294=0 + 0 ;while true do if ((v294==(0 -0)) or ((23 + 68)>(4323 -1958))) then v128=v87[2 + 0 ];v129,v130=v82(v85[v128](v13(v85,v128 + (1469 -(1024 + 444)) ,v87[1 + 0 + 2 ])));v294=1;end if (((2530 -(26 + 37))<=(3503 + 183 + 587)) and ((1 + 0)==v294)) then v127=(4 -3) + 0 ;break;end end end if (((78 + 1330)>316) and ((4 -3)==v127)) then local v295=0 -0 ;while true do if ((v295==(1 + 0)) or ((4060 -(340 + (2131 -1598)))>((1209 -(660 + 102)) + 3150))) then v127=(2796 -(438 + 500)) -(1276 + (1389 -809)) ;break;end if (((1343 + 1302)==(3849 -(818 + 386))) and (v295==(0 -(0 + 0)))) then v72=(v130 + v128) -(1 + 0) ;v131=0 + 0 ;v295=1 + 0 ;end end end end break;end end break;end end elseif (((1623 -(168 + 290))>=(2040 -1314)) and (v88>(1170 -(834 + 125 + 199)))) then local v180=0 -0 ;local v181;local v182;while true do if (((423 -(73 + 349))==v180) or ((6013 -(1475 + 363))>=(6669 -2300))) then while true do if ((v181==(0 -0)) or ((1376 -(13 + 1358))>(1711 + 2351))) then v182=v87[7 -5 ];v85[v182]=v85[v182](v85[v182 + (1 -0) ]);break;end end break;end if (((1297 -597)<=(5240 -((1353 -(726 + 429)) + 1271))) and (v180==(922 -(388 + 534)))) then local v255=0 -0 ;while true do if ((v255==(0 + 0)) or ((10603 -5831)<=(4655 -(172 + 1771)))) then v181=0 + 0 ;v182=nil;v255=1 + 0 ;end if ((3388>(13225 -9951)) and (v255==(2 -1))) then v180=2 -1 ;break;end end end end else v85[v87[1 + 1 ]]=v61[v87[952 -(858 + 91) ]];end elseif ((v88<=(7 + 7)) or ((2787 -(327 + 90))==(1995 + 1907))) then local v132=0 -0 ;local v133;local v134;local v135;local v136;local v137;while true do if (((2484 + 835)>=(2566 -(1037 + 535))) and ((0 -0)==v132)) then v133=0 + 0 ;v134=nil;v132=2 -1 ;end if ((v132==(102 -(71 + 29))) or ((2831 -1833)>((94 + 2415) -(227 + 248)))) then v137=nil;while true do if (((3769 -(857 + 486))>=(1937 -(195 + 1494))) and (v133==(573 -(212 + 361)))) then local v263=0 -(0 + 0) ;while true do if ((v263==(0 -0)) or ((6607 -1868)<=(5146 -3149))) then v134=v87[2 + 0 ];v135,v136=v82(v85[v134](v85[v134 + ((2 -1) -0) ]));v263=491 -(39 + (509 -(5 + 53))) ;end if ((v263==(254 -((186 -(34 + 45)) + 146))) or (((24724 -19050) -(1119 + 382))<((444 + 2235) -1225))) then v133=1583 -(1367 + 215) ;break;end end end if (((8805 -6168)<=3803) and ((2 -1)==v133)) then local v264=0 -0 ;while true do if ((v264==(1 + 0)) or ((8150 -5260)>(952 + 3865))) then v133=2;break;end if (((2697 -(32 + 3))>(1335 -(30 + (155 -96)))) and (v264==(373 -((639 -(321 + 102)) + 157)))) then v72=(v136 + v134) -(1 + 0) ;v137=78 -(37 + 41) ;v264=1 + (0 -0) ;end end end if (((2599 + 1856)>(3613 -(179 + 417))) and (v133==(1724 -(1578 + 144)))) then for v267=v134,v72 do local v268=0 + 0 ;while true do if ((v268==(144 -(126 + 18))) or ((3150 -(264 + 461))>(4655 -(1248 + 67)))) then v137=v137 + 1 + 0 ;v85[v267]=v135[v137];break;end end end break;end end break;end if (((6739 -3179)>(1668 -(31 + 31))) and (v132==(3 -(1997 -(915 + 1080))))) then v135=nil;v136=nil;v132=(4 -2) + 0 ;end end elseif ((v88>(33 -18)) or ((1751 -((13 -8) + 13))<=(6796 -(4649 + 739)))) then if (((3946 -(420 + 680))<(7715 -4463)) and v85[v87[5 -3 ]]) then v71=v71 + 1 + 0 ;else v71=v87[5 -2 ];end else v85[v87[5 -3 ]]=v87[8 -5 ]~=(0 + 0) ;end elseif ((v88<=(11 + 8)) or ((9742 -5516)==(3248 -((1228 -(103 + 25)) + 126)))) then if (((1138 + 16)==((303 + 1718) -(596 + 271))) and (v88<=(72 -55))) then if ((v87[(2136 -(1266 + 457)) -(220 + 191) ]<v85[v87[(1947 -(462 + 1477)) -(3 + 1) ]]) or ((2377 + (3329 -(910 + 778)))<(863 + 955))) then v71=v71 + 1 ;else v71=v87[2 + 1 + 0 ];end elseif (((234 + 38)<=(1283 -422)) and (v88==(39 -21))) then local v187=0;local v188;local v189;local v190;while true do if ((v187==(1 + 0)) or ((1256 + 2749)>(5932 -(962 + (1858 -1036))))) then v190=nil;while true do if ((v188==(601 -(436 + 164))) or ((11469 -7285)<=(5349 -1737))) then while true do if (((4069 + 497)>(5866 -(273 + 1633))) and (v189==(1720 -(1440 + 280)))) then v190=v87[2 + 0 ];do return v13(v85,v190,v190 + v87[7 -4 ] );end break;end end break;end if (((2357 -1397)<(502 + 199 + 1963)) and (v188==(0 -0))) then v189=(0 -0) + 0 ;v190=nil;v188=1 + (755 -(508 + 247)) ;end end break;end if ((v187==(80 -(68 + 12))) or (((3099 + 40) -1634)==(404 + 2483))) then v188=0 + (0 -0) ;v189=nil;v187=1482 -(1433 + 48) ;end end elseif ((((7949 -(115 + 40)) -5698)<(1509 + 3450)) and (v85[v87[1520 -(806 + 712) ]]~=v87[1254 -(163 + 1087) ])) then v71=v71 + 1 + 0 ;else v71=v87[4 -(1335 -(150 + 1184)) ];end elseif (((2974 -((1319 -591) + 29))<=(3026 -(539 + 132))) and (v88<=(52 -(1841 -(642 + 1167))))) then v85[v87[1 + 1 ]][v87[1064 -(493 + 568) ]]=v87[1464 -(782 + 678) ];elseif ((v88>(18 + 3)) or ((6753 -4827)==(10108 -5599))) then v85[v87[82 -(9 + 71) ]]={};else local v192=0 -0 ;local v193;local v194;local v195;while true do if (((512 + 424)==(443 + 493)) and (v192==(0 + 0))) then local v256=0 -0 ;while true do if (((2475 -(343 + 93))<(2031 + 2599)) and (v256==((995 + 336) -(135 + 1195)))) then v192=1 + 0 + 0 ;break;end if ((v256==(0 -0)) or ((5415 -(591 + (2836 -(545 + 1145))))<=(322 + 100))) then v193=0 + 0 ;v194=nil;v256=2 -(1204 -(874 + 329)) ;end end end if (((4800 -(867 + 81 + 530))>=1619) and (v192==(1 + 0))) then v195=nil;while true do if (((584 + 4277)>(8829 -6031)) and (v193==1)) then v85[v194 + 1 + 0 ]=v195;v85[v194]=v195[v87[2 + 2 ]];break;end if ((1055<(5321 -(127 + 1744))) and ((0 + 0)==v193)) then local v281=57 -(16 + 10 + 31) ;local v282;while true do if (((7068 -5518)==(3034 -(301 + 1183))) and (v281==(0 + 0))) then v282=0;while true do if (((3172 -1880)<=(1781 + 2075)) and (v282==(0 + 0))) then local v354=0 -0 ;while true do if ((v354==1) or ((659 + (5272 -3620))==(2500 -(376 + 1006)))) then v282=1 -0 ;break;end if ((v354==(1068 -(991 + (1551 -(1317 + 157))))) or ((228 + 282)>=(736 -(135 + 16)))) then v194=v87[949 -(729 + 218) ];v195=v85[v87[1299 -((1029 -366) + 633) ]];v354=(2 -0) -1 ;end end end if (((1346 + 707)<(15788 -11695)) and (v282==(1 -0))) then v193=1 + 0 ;break;end end break;end end end end break;end end end elseif (((6368 -(2222 + 788))<=4297) and (v88<=(9 + 24))) then if ((v88<=((1214 -(1139 + 52)) + 4)) or ((9812 -6323)<=(8477 -5024))) then if ((v88<=(1963 -(1652 + 287))) or ((3874 -(781 + 420))>=(8200 -(11222 -5999)))) then if (((2514 -1736)==778) and (v88>(111 -(296 -(133 + 75))))) then v85[v87[956 -((2155 -1573) + 372) ]]=v30(v80[v87[3 + 0 ]],nil,v61);else local v141=(0 + 0) -0 ;local v142;local v143;local v144;while true do if ((v141==1) or ((3990 + 61)<(11062 -7164))) then v144=nil;while true do if (((3059 -(113 + 274))>=((11580 -6451) -4046)) and ((0 + 0)==v142)) then v143=0;v144=nil;v142=1 -0 ;end if ((v142==(1 + 0)) or ((2537 -1822)>(6805 -(135 + 4813)))) then while true do if (((983 -(42 + 100))<=(1167 + (2411 -1696))) and (v143==(861 -(464 + 397)))) then v144=v87[2 + 0 ];v85[v144]=v85[v144](v13(v85,v144 + ((1485 -(948 + 536)) -(246 -(98 + 148))) ,v72));break;end end break;end end break;end if ((v141==(0 + 0)) or ((4527 -2532)<(1057 -(371 + 389)))) then v142=1557 -(1484 + 73) ;v143=nil;v141=936 -(681 + 254) ;end end end elseif ((v88<=((50 -27) + 2)) or ((1760 -831)>(2862 -(570 + 1117)))) then do return v85[v87[(1592 -(639 + 949)) -2 ]];end elseif (((496 + 4158)>=(1061 -795)) and (v88>(37 -(39 -28)))) then if ((v85[v87[1766 -(797 + 967) ]]==v85[v87[4 + 0 ]]) or ((5510 -(762 + 186))==(78 + (356 -(60 + 93))))) then v71=v71 + (406 -(204 + 201)) ;else v71=v87[7 -4 ];end else v85[v87[2 + 0 ]]=v85[v87[3 + 0 ]] -v85[v87[1730 -(1371 + 355) ]] ;end elseif ((v88<=(1954 -(1262 + 662))) or ((5678 -2682)>=(5125 -(845 + 1067)))) then if (((4072 -1028)>(623 + 1207)) and (v88<=(42 -14))) then for v156=v87[(1795 -(1588 + 204)) -1 ],v87[1 + 2 ] do v85[v156]=nil;end elseif (((101 + 70)<=(9474 -(13280 -8412))) and (v88>(108 -79))) then local v197=0 + 0 ;local v198;local v199;while true do if ((v197==((203 + 25) -(103 + 125))) or ((1876 + 1246)>=(4998 -(111 + 61)))) then local v257=141 -(5 + 136) ;while true do if ((3252>=(4435 -(157 + 1564))) and (v257==(1939 -(1049 + 889)))) then v197=(2 + 0) -1 ;break;end if (((1714 -1105)<(4660 + 111 + 52)) and (v257==(0 + 0))) then v198=1621 -(168 + 1453) ;v199=nil;v257=4 -3 ;end end end if (((1 + 0)==v197) or ((562 + 1705 + 191)<=(137 + 462))) then while true do if ((v198==((0 + 0) -0)) or ((512 -(35 + 389))>(289 + 411))) then v199=v87[2];v85[v199]=v85[v199](v13(v85,v199 + (2 -1) ,v87[4 -1 ]));break;end end break;end end else local v200=(512 -246) -(233 + 33) ;local v201;local v202;local v203;while true do if ((v200==(0 -0)) or ((6819 -4342)<(7071 -4660))) then v201=0 + 0 ;v202=nil;v200=253 -(93 + 159) ;end if (((2370 -1513)==(2651 -(650 + 1144))) and (v200==(1329 -(1153 + 175)))) then v203=nil;while true do if ((v201==(0 + 0)) or ((11695 -7814)==(3259 + 807))) then v202=1506 -(454 + 1052) ;v203=nil;v201=845 -(217 + 627) ;end if (((432 -147)==(410 -125)) and (v201==(1 + 0))) then while true do if ((v202==0) or (((2454 -(546 + 28)) -958)>=(5404 -(422 + 777)))) then v203=v87[(2258 -(1178 + 209)) -(777 + 92) ];v85[v203](v13(v85,v203 + 1 ,v87[1180 -(1137 + 40) ]));break;end end break;end end break;end end end elseif ((v88<=(17 + 14)) or ((1765 -(343 + 598))==((1370 -(534 + 116)) + 488))) then if (((3643 -2344)<=((2046 -642) + 2661)) and (v87[2 + 0 ]==v85[v87[1 + 3 ]])) then v71=v71 + (390 -(62 + 327)) ;else v71=v87[4 -1 ];end elseif (((2683 + 438)<(4599 -(1120 + 76))) and (v88==(1 + 31))) then v71=v87[7 -4 ];else v85[v87[2 + 0 ]]=v60[v87[(139 + 292) -((180 -108) + 356) ]];end elseif (((2753 -(98 + 121))==(4524 -(262 + 1728))) and (v88<=(401 -(108 + 254)))) then if (((2494 + 217 + 173)<=(3992 -(3 + 5 + 110))) and (v88<=(65 -(9 + 20)))) then if (((2446 -(866 + 107))<(1021 + 2240)) and (v88<=(798 -(246 + 518)))) then v60[v87[(2192 -(244 + 209)) -(598 + 1138) ]]=v85[v87[1 + 1 ]];elseif ((v88>(2008 -(12 + (3979 -2018)))) or ((1967 + 211 + 148)==(1616 -(495 + 171)))) then local v208=950 -(272 + 678) ;local v209;local v210;local v211;while true do if ((v208==0) or (1303>(2626 -(514 + 226 + 211)))) then v209=0 -0 ;v210=nil;v208=544 -(137 + 406) ;end if ((v208==(2 -1)) or ((2307 + 2520)<2621)) then v211=nil;while true do if (((2814 + 2156)==4970) and ((1 + 0)==v209)) then while true do if ((v210==((752 -(65 + 687)) + 0)) or ((3079 -1189)==(395 + 25))) then v211=v87[7 -(1623 -(89 + 1529)) ];v85[v211](v85[v211 + (2 -1) ]);break;end end break;end if ((v209==(0 + (1994 -(179 + 1815)))) or (1825>(2697 + 1327))) then v210=(0 -0) -0 ;v211=nil;v209=(3 -2) + 0 ;end end break;end end else v85[v87[2 -0 ]]=v85[v87[1963 -(1218 + 693 + 49) ]];end elseif ((v88<=(16 + 4 + 17)) or (((7093 + 716) -3916)==(2922 + 412 + 458))) then local v147=1464 -(186 + 1278) ;local v148;local v149;while true do if (((878 -534)>(480 -247)) and (v147==(1011 -(485 + 525)))) then for v245=1 + 0 , #v84 do local v246=382 -(125 + 257) ;local v247;local v248;while true do if (((10272 -6855)>(3581 -2243)) and (v246==(2 -(1 -0)))) then while true do if ((v247==(0 -0)) or ((13809 -10654)==(13559 -9466))) then v248=v84[v245];for v326=0 -0 , #v248 do local v327=0 -0 ;local v328;local v329;local v330;local v331;local v332;while true do if ((((4121 + 2112) -(773 + 548))>(15908 -12457)) and ((1101 -(169 + 930))==v327)) then v332=nil;while true do if ((v328==(5 -3)) or ((1011 + 303 + 1343)>(3249 -(269 + 279)))) then while true do if (((3 -2)==v329) or ((3465 -(350 + 766))<(2486 -(952 + 165)))) then v332=v330[429 -(190 + 237) ];if (((265 -155)>=(64 -43)) and (v331==v85) and (v332>=v148)) then local v397=(0 -0) + 0 ;local v398;while true do if (((483 + 2234)<=(3570 + 359)) and (v397==(0 -0))) then v398=0;while true do if (((84 + 1296)==(1115 + 265)) and ((1594 -(760 + 834))==v398)) then v149[v332]=v331[v332];v330[(1701 -(517 + 1183)) + 0 ]=v149;break;end end break;end end end break;end if ((v329==((0 -0) -(0 -0))) or ((1574 + 106)>(5533 -(1675 + 151)))) then local v394=0 -0 ;while true do if (((1914 -(772 + (1624 -483)))==v394) or ((935 + 1872)<=(73 + 1344))) then v329=4 -3 ;break;end if ((v394==(0 + 0)) or ((5788 -2388)<2645)) then v330=v248[v326];v331=v330[920 -(836 + 83) ];v394=4 -3 ;end end end end break;end if ((((21129 -15986) -(1103 + 315))==(1030 + 2695)) and (v328==(0 + 0))) then v329=(1421 -(1170 + 198)) -(41 + 12) ;v330=nil;v328=1481 -(139 + 819 + 522) ;end if (((10733 -6623)>(3218 -(354 + (262 -(55 + 32))))) and (v328==(1001 -(424 + 576)))) then v331=nil;v332=nil;v328=121 -(4 + 115) ;end end break;end if (((1107 + 2029)>=(1109 + 823)) and (v327==(151 -(113 + 38)))) then v328=0 + 0 ;v329=nil;v327=1 + 0 ;end if ((v327==(1067 -(598 + 468))) or ((2081 -(1438 + 69))==(2983 -1229))) then v330=nil;v331=nil;v327=1 + 1 ;end end end break;end end break;end if (((0 -0)==v246) or ((3900 -(226 + 267 + 167))<=(2008 -((1571 -803) + 114)))) then v247=1399 -(579 + 820) ;v248=nil;v246=2 -1 ;end end end break;end if (((674 -442)<(3800 + 506)) and ((0 + 0)==v147)) then local v235=0 + 0 ;while true do if ((1011<=(6674 -5089)) and (v235==((1189 -(573 + 616)) + 0))) then v148=v87[(3 -2) + (1 -0) ];v149={};v235=(1 -0) + 0 ;end if ((v235==(1270 -(473 + 796))) or (1985<=(399 -213))) then v147=1 + 0 ;break;end end end end elseif ((v88>(31 + 7)) or ((2445 -(20 + 160))==(16259 -12967))) then v85[v87[130 -(93 + 35) ]]=v85[v87[3]][v87[3 + 1 ]];elseif ((v85[v87[1 + 1 ]]==v87[116 -(82 + 30) ]) or ((8918 -5752)<(4263 -(1130 + 443)))) then v71=v71 + (1516 -(209 + 1306)) ;else v71=v87[987 -(467 + 517) ];end elseif (((4788 -2802)>(2684 -(82 + 234 + (1630 -689)))) and (v88<=(1199 -(996 + 4 + 157)))) then if ((v88<=(39 + 1)) or ((4747 -(483 + 388))==(538 + 2391 + 441))) then do return;end elseif ((v88>(341 -(267 + 33))) or ((887 + 1196 + 2120)>=(8140 -(1606 + 1999)))) then v85[v87[(951 -(183 + 766)) -0 ]]=v85[v87[2 + (1 -0) ]][v85[v87[1631 -(152 + 1475) ]]];else local v218=1023 -(465 + 558) ;local v219;local v220;local v221;while true do if ((((1807 + 611) -(1150 + 556))<(4649 -(122 + 116))) and (v218==(1 + 0))) then v221=nil;while true do if ((v219==(1 -0)) or ((3450 + 76)==(4376 -(1269 + 355)))) then for v299=v220 + ((1443 -(14 + 42)) -(1187 + (791 -592))) ,v87[18 -14 ] do v221=v221   .. v85[v299] ;end v85[v87[(1812 -(527 + 184)) -(331 + 768) ]]=v221;break;end if (((12485 -8952)==(4476 -((1801 -950) + 92))) and (v219==(0 -0))) then local v286=0 + 0 ;while true do if (((3715 -(470 + 669))>=(2580 -1350)) and (v286==(1 + 0 + 0))) then v219=(4 -3) -0 ;break;end if (((565 -(39 + 251))<(6651 -1842)) and (v286==(0 + (0 -0)))) then v220=v87[281 -(82 + 196) ];v221=v85[v220];v286=1 + 0 ;end end end end break;end if ((v218==(1599 -(621 + 978))) or ((2347 -(1145 + 309))>(2469 -(991 + 227)))) then local v258=0 + 0 + 0 ;while true do if ((v258==(0 -0)) or ((4573 -(6471 -3635))<=(106 + (2240 -1767)))) then v219=0 -0 ;v220=nil;v258=1 + 0 ;end if ((v258==(1560 -(775 + 61 + (798 -(7 + 68))))) or ((7368 -4077)<=2950)) then v218=1 + 0 ;break;end end end end end elseif ((v88<=(122 -79)) or ((2760 + (1669 -(838 + 344)))<=(4627 -(1545 + (535 -168))))) then local v150=1404 -(961 + 443) ;local v151;local v152;local v153;local v154;local v155;while true do if (((6291 -4497)<=(4816 -(43 + 13 + 641))) and (v150==(2 -0))) then v155=nil;while true do if ((v151==(0 + 0)) or (((2613 -688) + 1988)==(3158 + 140))) then local v266=0 + 0 + 0 ;while true do if (((2530 + 1051)>=(4053 -(394 + 860))) and (v266==(0 + 0))) then v152=1382 -(95 + (3388 -2101)) ;v153=nil;v266=1 + 0 ;end if ((v266==(1 -0)) or ((1634 + (3853 -(476 + 988)))<((5582 -3592) -1276))) then v151=1 -0 ;break;end end end if ((v151==(893 -(811 + 80))) or ((5699 -2226)<((1884 -(971 + 514)) + 267))) then while true do if ((v152==(7 -5)) or ((3878 + 495)==(314 + 1181))) then for v313=830 -(407 + 422) ,v87[4 -(0 + 0) ] do local v314=0 + 0 ;local v315;local v316;while true do if ((v314==((2 + 0) -(1 + 0))) or ((247 + 4073)<=(7315 -4763))) then while true do if (((165 + 4146)>=(264 -116)) and (v315==((0 -0) -0))) then local v365=0 -0 ;while true do if (((1 + 0)==v365) or ((3280 -(181 + 1742))>=(8860 -5382))) then v315=1695 -(1588 + 106) ;break;end if (((4640 -(445 + 118))>(2284 -(232 + 495))) and (v365==(0 -(421 -(313 + 108))))) then v71=v71 + (1 -0) ;v316=v79[v71];v365=1626 -(183 + (2106 -664)) ;end end end if ((v315==(1 + 0)) or (((15976 -6978) -6101)<(7190 -4649))) then if (((3076 -772)<=(1969 + 30 + 1797)) and (v316[1340 -(245 + 1094) ]==(82 -47))) then v155[v313-(1 + 0) ]={v85,v316[3]};else v155[v313-(290 -(163 + 126)) ]={v60,v316[291 -(11 + 98 + 179) ]};end v84[ #v84 + 1 + 0 ]=v155;break;end end break;end if ((v314==(0 + 0 + 0)) or ((706 + 2447)<(1905 -(1571 -(597 + 378))))) then local v349=0 -0 ;while true do if ((v349==(0 + 0)) or ((2788 -(53 + 140))==(1331 -962))) then v315=0 -0 ;v316=nil;v349=1;end if ((((6208 -(1425 + 108)) -2152)>(792 -(238 + 134))) and (v349==(1 -0))) then v314=(1 -0) + (0 -0) ;break;end end end end end v85[v87[1200 -(693 + 73 + 432) ]]=v30(v153,v154,v61);break;end if (((1084 -606)<=((14721 -(764 + 80)) -9719)) and (v152==(565 -((508 -229) + 285)))) then local v301=0 -0 ;while true do if ((v301==0) or (((2102 -(327 + 1163)) + 689)==(2124 -(371 + 154)))) then local v344=0 + 0 ;while true do if ((v344==(1 + 0)) or ((9528 -5923)<=(6535 -4179))) then v301=1 + 0 ;break;end if (((229 + 1718)>(2114 -(76 + 720))) and (v344==(0 + 0 + 0))) then v155={};v154=v10({},{__index=function(v367,v368)local v369=0 -0 ;local v370;while true do if (((9241 -5063)>(1063 + 189 + 1944)) and (v369==((0 + 0) -0))) then local v390=(253 -(119 + 134)) + 0 ;while true do if ((4335>(842 -(157 + 430))) and (v390==(0 -0))) then v370=v155[v368];return v370[1 + 0 ][v370[1 + 1 ]];end end end end end,__newindex=function(v371,v372,v373)local v374=1356 -(702 + 654) ;local v375;while true do if ((v374==0) or ((978 -307)>=(4292 -(650 + 933)))) then v375=v155[v372];v375[882 -(25 + 856) ][v375[2 + 0 ]]=v373;break;end end end});v344=2 -(1 + 0) ;end end end if (((6614 -4429)<(15460 -11871)) and (v301==((3 -2) + 0))) then v152=5 -3 ;break;end end end if (((5720 -(612 + 987))<=(5552 -(630 + 180))) and (v152==(0 + 0))) then local v302=0;local v303;while true do if ((v302==(0 + 0)) or ((2354 -(26 + 211))>((22782 -16516) -3309))) then v303=967 -(179 + (2736 -(146 + 1802))) ;while true do if (((8618 -5681)>=1896) and (v303==(0 + 0))) then v153=v80[v87[6 -3 ]];v154=nil;v303=1 + 0 ;end if ((((226 + 981) -(532 + 674))==v303) or ((2491 -(428 + 1067))>=(4877 -(80 + 1354)))) then v152=1 + 0 ;break;end end break;end end end end break;end if ((v151==(1 -0)) or ((3750 -2233)>(9639 -5391))) then v154=nil;v155=nil;v151=2 + 0 ;end end break;end if (((6473 -(670 + 847))>=3161) and (v150==(0 + 0))) then v151=700 -(59 + 491 + 150) ;v152=nil;v150=1 + 0 ;end if ((((7929 -3067) -(644 + 343))<(18000 -13692)) and ((1 + 0)==v150)) then v153=nil;v154=nil;v150=2 + 0 ;end end elseif ((v88==(29 + 15)) or ((4586 -(565 + 642))>=(4569 -(837 + 223)))) then local v222=0 + (1819 -(968 + 851)) ;local v223;local v224;local v225;local v226;local v227;while true do if (((643 -(127 + 516))==v222) or ((1387 + 106)<(11 + 296))) then v223=1107 -(570 + 537) ;v224=nil;v222=1 + 0 ;end if ((v222==(1 + 0)) or ((2846 -(274 + 1293))<(1959 -(144 + 1655)))) then v225=nil;v226=nil;v222=1 + 1 ;end if (((4611 -(50 + 378 + 66))==(8931 -4814)) and (v222==(5 -3))) then v227=nil;while true do if ((v223==(2 + 0)) or ((4982 -(31 + 83))==(3048 -(41 + 139)))) then while true do if (((5237 -3021)>431) and (v224==(0 + 0))) then local v335=(0 -0) + 0 ;local v336;while true do if (((5069 -(1088 + 783))>=((203 + 1634) -(52 + 202))) and (v335==((0 -0) + 0))) then v336=0 -0 ;while true do if (((3838 -2048)<=(968 + 3689)) and (v336==(1479 -(221 + 1258)))) then v225=v87[1 + 1 ];v226={v85[v225](v13(v85,v225 + (958 -(472 + 485)) ,v87[3]))};v336=(2645 -(428 + 1422)) -(269 + 197 + 231 + 97) ;end if (((4716 -3140)<(6125 -(495 + 1154))) and (v336==((22 + 667) -(55 + 633)))) then v224=(332 -56) -(4 + 271) ;break;end end break;end end end if (((2146 + 1204)<=(5432 -(338 + 209))) and (v224==(1 + 0))) then v227=576 -(35 + 541) ;for v345=v225,v87[10 -(13 -7) ] do local v346=1392 -(250 + 755 + 387) ;while true do if (((12059 -(3637 + 4908))==(4232 -718)) and (v346==(0 + 0))) then v227=v227 + (193 -(144 + 40 + 8)) ;v85[v345]=v226[v227];break;end end end break;end end break;end if (((3219 -(162 + 500))==((5132 + 2331) -4906)) and (v223==(0 + 0))) then v224=0 + 0 ;v225=nil;v223=(2708 -(158 + 618)) -(1003 + 928) ;end if (((159 -(116 + 42))==v223) or ((1714 -(385 + 2 + 595))==((7522 -2758) -(108 + 833)))) then local v287=0 + 0 ;while true do if ((v287==(0 + 0)) or ((7066 -4727)>=((4075 -1259) + 1702))) then v226=nil;v227=nil;v287=592 -(26 + 82 + 483) ;end if (((1 -0)==v287) or ((4569 -(2158 -926))==(9015 -4419))) then v223=(2 -1) + 1 ;break;end end end end break;end end else v85[v87[105 -(100 + 3) ]]=v87[617 -(510 + 104) ];end v71=v71 + (1 -0) ;break;end if ((v93==(636 -(381 + 255))) or (((1249 + 7853) -(7315 -(16 + 45)))==(467 + 835))) then local v104=(0 -0) + 0 + 0 ;while true do if (((0 -0)==v104) or ((1559 + (3027 -(689 + 306)))<=(72 + 359))) then v87=v79[v71];v88=v87[1 + 0 ];v104=3 -2 ;end if (((5507 -2671)<=((2567 -(573 + 81)) + 1455)) and ((1 + 0)==v104)) then v93=164 -((22 -15) + 128 + 28) ;break;end end end end end end A,B=v28(v11(v75));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v59[4][v71] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==2) then function v22()local v65=0 + 0 ;local v66;while true do if (v65==((114 + 288) -(40 + 362))) then v66=v1(v16,v19,v19);v19=v19 + (417 -(4 + 412)) ;v65=1768 -(1285 + 482) ;end if (v65==(1 + 0)) then return v66;end end end v23=nil;function v23()local v67=0 -0 ;local v68;local v69;while true do if (v67==(1 + 0)) then return (v69 * (482 -226)) + v68 ;end if (v67==(0 + 0)) then v68,v69=v1(v16,v19,v19 + 2 + 0 );v19=v19 + 2 + 0 ;v67=1;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v70)if (v1(v70,2)==79) then local v89=0;while true do if (v89==0) then v20=v0(v3(v70,1,1));return "";end end else local v90=0;local v91;while true do if (v90==0) then v91=v2(v0(v70,16));if v20 then local v108=v5(v91,v20);v20=nil;return v108;else return v91;end break;end end end end);v18=1;end end end vv9(),...);end
